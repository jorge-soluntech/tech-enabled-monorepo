name: infra del proyecto

on:
  workflow_dispatch:
defaults:
  run:
    working-directory: infra/

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Configure AWS credentials from net account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_CLOUD }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_CLOUD}}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN_CLOUD }}
          aws-region: us-east-1
      - name: Install dependencies and aws cdk
        run: |
          sudo npm install -g aws-cdk
          npm install

  dev:
    needs: ci
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Configure AWS credentials from dev account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_CLOUD }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_CLOUD }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN_NONPROD }}
          aws-region: us-east-1
      - name: Install dependencies and aws cdk
        run: |
          sudo npm install -g aws-cdk
          npm install
      
      - name: Deploy ECR 
        env:
          ECR_CONFIG: techEnabledEcr
          PRJ_ECR_NAME: Clone
          STACK_NAME: TechEnabledComputing
          ECR_REPOSITORIES: clone1
          ECS_CLUSTER: TechEnabled
          ECS_SERVICE: TechEnabled
          TASK_DENIFITION: TechEnabled
          EC2_VPC: Ec2-orchestrator

        run: |
          ECR_CONFIG=${{ env.ECR_CONFIG }} \
          PRJ_ECR_NAME=${{ env.PRJ_ECR_NAME }} \
          STACK_NAME=${{ env.STACK_NAME }} \
          ECR_REPOSITORIES=${{ env.ECR_REPOSITORIES }} \
          ECS_CONFIG=${{ env.ECS_CONFIG }} \
          ECS_STACK_NAME=${{ env.ECS_STACK_NAME }} \
          ECS_CLUSTER=${{ env.ECS_CLUSTER }} \
          ECS_SERVICE=${{ env.ECS_SERVICE }} \
          TASK_DENIFITION=${{ env.TASK_DENIFITION }} \
          EC2_VPC=${{ env.EC2_VPC }} \

          cdk deploy ${{ env.STACK_NAME }} -c config=${{ env.ECR_CONFIG }} --require-approval never

      - name: Deploy Infra iac
        env:
          INFRA_STACK_NAME: infra
          INFRA_CONFIG: infraestructureIAC
        run: |
          INFRA_STACK_NAME=${{ env.INFRA_STACK_NAME }}
          INFRA_CONFIG=${{ env.INFRA_CONFIG }}
          cdk deploy ${{ env.INFRA_STACK_NAME }} -c config=${{ env.INFRA_CONFIG }} --require-approval never

   