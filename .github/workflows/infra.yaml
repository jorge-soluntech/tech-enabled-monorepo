name: infra del proyecto

on:
  workflow_dispatch:
defaults:
  run:
    working-directory: infra/

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Configure AWS credentials from net account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_CLOUD }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_CLOUD}}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN_CLOUD }}
          aws-region: us-east-1
      - name: Install dependencies and aws cdk
        run: |
          sudo npm install -g aws-cdk
          npm install

  dev:
    needs: ci
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Configure AWS credentials from dev account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_CLOUD }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_CLOUD }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN_NONPROD }}
          aws-region: us-east-1
      - name: Install dependencies and aws cdk
        run: |
          sudo npm install -g aws-cdk
          npm install
      
      - name: Deploy ECR 
        env:
          ECR_CONFIG: techEnabled
          PRJ_ECR_NAME: techenabledClone
          STACK_NAME: EcrIscaff
          ECR_REPOSITORIES: scaffm8,scaffm1289

        run: |
          ECR_CONFIG=${{ env.ECR_CONFIG }} \
          PRJ_ECR_NAME=${{ env.PRJ_ECR_NAME }} \
          STACK_NAME=${{ env.STACK_NAME }} \
          ECR_REPOSITORIES=${{ env.ECR_REPOSITORIES }} \
          cdk deploy ${{ env.STACK_NAME }} -c config=${{ env.ECR_CONFIG }} --require-approval never